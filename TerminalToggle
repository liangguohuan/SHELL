#!/bin/bash
#
# let 'gnome-terminal' get function bind key to show hide like 'guake terminal'
#

source "/home/hanson/CodeHub/SHELL/libs/bootstrap.sh"


title="TerminalToggle"

file=/tmp/terminal_toggle_window
filestate=/tmp/terminal_toggle_window_state
filegeometry=/tmp/terminal_toggle_window_geometry
statehide='hide'
stateunhide='unhide'

if [[ -f $file ]]  ; then
    winid=`cat $file`
    state=`cat $filestate`

    if [[ $state == $stateunhide ]]; then
        state=$statehide
        xdotool windowmap "$winid"
        xdotool windowactivate "$winid"
        eval $( cat "$filegeometry" )
        xdotool windowmove --sync "$winid" $X $Y
    else
        if [[ `xdotool getwindowfocus` == "$winid" ]]; then
            state=$stateunhide
            xdotool getwindowgeometry --shell "$winid" > $filegeometry
            xdotool windowunmap "$winid"
        else
            state=$statehide
            xdotool windowactivate "$winid"
        fi
    fi

    # if [[ $? > 0 ]]; then
    #     rm $file*
    #     $0 # reload
    # fi

    echo $state > $filestate
else 
    gnome-terminal -t "$title"
    xdotool search --sync --onlyvisible --name "^$title$"
    wid=`xdotool getactivewindow`
    echo $wid > $file
    # xdotool windowsize "$wid" 100% 100%
    xdotool key --delay 1000 F11
fi
